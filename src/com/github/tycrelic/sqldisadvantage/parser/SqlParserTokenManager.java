/* SqlParserTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. SqlParserTokenManager.java */
package com.github.tycrelic.sqldisadvantage.parser;
import java.util.*;

/** Token Manager. */
@SuppressWarnings("unused")public class SqlParserTokenManager implements SqlParserConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_4(int pos, long active0, long active1, long active2){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x2000000000L) != 0L)
         {
            jjmatchedKind = 140;
            return 373;
         }
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 50;
            return 193;
         }
         if ((active1 & 0x10L) != 0L)
         {
            jjmatchedKind = 40;
            return 9;
         }
         if ((active1 & 0xcL) != 0L)
         {
            jjmatchedKind = 140;
            return 331;
         }
         if ((active0 & 0x450000000000100L) != 0L)
         {
            jjmatchedKind = 140;
            return 263;
         }
         if ((active0 & 0x20000200L) != 0L || (active1 & 0x2L) != 0L)
         {
            jjmatchedKind = 24;
            return 140;
         }
         if ((active1 & 0x80L) != 0L)
         {
            jjmatchedKind = 140;
            return 90;
         }
         if ((active0 & 0x20000L) != 0L)
            return 42;
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 140;
            return 98;
         }
         if ((active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 140;
            return 247;
         }
         return -1;
      case 1:
         if ((active1 & 0x4L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 330;
         }
         if ((active0 & 0x10006000000300L) != 0L || (active1 & 0xcaL) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 373;
         }
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 192;
         }
         if ((active0 & 0x40000000000000L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 267;
         }
         if ((active1 & 0x10L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 8;
         }
         if ((active0 & 0x20000000L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 149;
         }
         if ((active0 & 0x400000000000000L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 279;
         }
         return -1;
      case 2:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 2;
            return 211;
         }
         if ((active1 & 0x4L) != 0L)
         {
            jjmatchedKind = 31;
            jjmatchedPos = 2;
            return 373;
         }
         if ((active0 & 0x10002000000000L) != 0L)
            return 373;
         if ((active0 & 0x440004020000300L) != 0L || (active1 & 0xdaL) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 2;
            return 373;
         }
         return -1;
      case 3:
         if ((active0 & 0x440000000000100L) != 0L || (active1 & 0xf6L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 3;
            return 373;
         }
         if ((active0 & 0x4020000200L) != 0L || (active1 & 0x8L) != 0L)
            return 373;
         return -1;
      case 4:
         if ((active0 & 0x40000000000100L) != 0L || (active1 & 0xf6L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 4;
            return 373;
         }
         if ((active0 & 0x400000000000000L) != 0L)
            return 373;
         return -1;
      case 5:
         if ((active0 & 0x100L) != 0L || (active1 & 0x96L) != 0L)
            return 373;
         if ((active0 & 0x40000000000000L) != 0L || (active1 & 0x60L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 5;
            return 373;
         }
         return -1;
      case 6:
         if ((active0 & 0x40000000000000L) != 0L || (active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 6;
            return 373;
         }
         if ((active1 & 0x20L) != 0L)
            return 373;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_4(int pos, long active0, long active1, long active2){
   return jjMoveNfa_4(jjStopStringLiteralDfa_4(pos, active0, active1, active2), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_4(){
   switch(curChar)
   {
      case 9:
         return jjStopAtPos(0, 2);
      case 10:
         return jjStopAtPos(0, 4);
      case 13:
         return jjStopAtPos(0, 3);
      case 32:
         return jjStopAtPos(0, 1);
      case 40:
         return jjStopAtPos(0, 7);
      case 47:
         return jjStartNfaWithStates_4(0, 17, 42);
      case 59:
         return jjStopAtPos(0, 145);
      case 64:
         jjmatchedKind = 15;
         return jjMoveStringLiteralDfa1_4(0x10000L, 0x0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa1_4(0x20000200L, 0x2L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa1_4(0x0L, 0xcL);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa1_4(0x2000000000L, 0x0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa1_4(0x4000000000L, 0x0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa1_4(0x0L, 0x10L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa1_4(0x0L, 0x20L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa1_4(0x450000000000100L, 0x0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa1_4(0x0L, 0x40L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa1_4(0x0L, 0x80L);
      default :
         return jjMoveNfa_4(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_4(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(0, active0, active1, 0L);
      return 1;
   }
   switch(curChar)
   {
      case 64:
         if ((active0 & 0x10000L) != 0L)
            return jjStopAtPos(1, 16);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_4(active0, 0x200L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa2_4(active0, 0x10006000000100L, active1, 0x24L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa2_4(active0, 0x40000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_4(active0, 0L, active1, 0x10L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa2_4(active0, 0x20000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_4(active0, 0L, active1, 0x80L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_4(active0, 0L, active1, 0x4aL);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_4(active0, 0x400000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_4(0, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa2_4(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_4(0, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(1, active0, active1, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 68:
      case 100:
         return jjMoveStringLiteralDfa3_4(active0, 0L, active1, 0x80L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_4(active0, 0L, active1, 0x2L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_4(active0, 0x4000000300L, active1, 0x4L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_4(active0, 0x400000000000000L, active1, 0x8L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa3_4(active0, 0x20000000L, active1, 0x20L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa3_4(active0, 0L, active1, 0x10L);
      case 84:
      case 116:
         if ((active0 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_4(2, 37, 373);
         else if ((active0 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_4(2, 52, 373);
         break;
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_4(active0, 0x40000000000000L, active1, 0x40L);
      default :
         break;
   }
   return jjStartNfa_4(1, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa3_4(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_4(1, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(2, active0, active1, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_4(active0, 0L, active1, 0x82L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_4(active0, 0x100L, active1, 0x14L);
      case 76:
      case 108:
         if ((active0 & 0x200L) != 0L)
            return jjStartNfaWithStates_4(3, 9, 373);
         return jjMoveStringLiteralDfa4_4(active0, 0L, active1, 0x20L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_4(active0, 0L, active1, 0x40L);
      case 80:
      case 112:
         if ((active0 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_4(3, 38, 373);
         else if ((active1 & 0x8L) != 0L)
            return jjStartNfaWithStates_4(3, 67, 373);
         break;
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_4(active0, 0x400000000000000L, active1, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_4(active0, 0x40000000000000L, active1, 0L);
      case 89:
      case 121:
         if ((active0 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_4(3, 29, 373);
         break;
      default :
         break;
   }
   return jjStartNfa_4(2, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa4_4(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_4(2, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(3, active0, active1, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa5_4(active0, 0L, active1, 0x20L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa5_4(active0, 0x100L, active1, 0x40L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa5_4(active0, 0x40000000000000L, active1, 0L);
      case 69:
      case 101:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_4(4, 58, 373);
         break;
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_4(active0, 0L, active1, 0x10L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa5_4(active0, 0L, active1, 0x86L);
      default :
         break;
   }
   return jjStartNfa_4(3, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa5_4(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_4(3, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(4, active0, active1, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa6_4(active0, 0L, active1, 0x40L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa6_4(active0, 0L, active1, 0x20L);
      case 69:
      case 101:
         if ((active1 & 0x2L) != 0L)
            return jjStartNfaWithStates_4(5, 65, 373);
         else if ((active1 & 0x4L) != 0L)
            return jjStartNfaWithStates_4(5, 66, 373);
         else if ((active1 & 0x80L) != 0L)
            return jjStartNfaWithStates_4(5, 71, 373);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_4(active0, 0x40000000000000L, active1, 0L);
      case 84:
      case 116:
         if ((active0 & 0x100L) != 0L)
            return jjStartNfaWithStates_4(5, 8, 373);
         else if ((active1 & 0x10L) != 0L)
            return jjStartNfaWithStates_4(5, 68, 373);
         break;
      default :
         break;
   }
   return jjStartNfa_4(4, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa6_4(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_4(4, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(5, active0, active1, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_4(6, 69, 373);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa7_4(active0, 0L, active1, 0x40L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa7_4(active0, 0x40000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_4(5, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa7_4(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_4(5, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(6, active0, active1, 0L);
      return 7;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active1 & 0x40L) != 0L)
            return jjStartNfaWithStates_4(7, 70, 373);
         break;
      case 78:
      case 110:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStartNfaWithStates_4(7, 54, 373);
         break;
      default :
         break;
   }
   return jjStartNfa_4(6, active0, active1, 0L);
}
private int jjStartNfaWithStates_4(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_4(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_4(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 373;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 211:
               case 24:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(24); }
                  break;
               case 279:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(24); }
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 138)
                        kind = 138;
                     { jjCheckNAddStates(0, 6); }
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 42;
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 39;
                  else if (curChar == 34)
                     { jjCheckNAddTwoStates(31, 32); }
                  else if (curChar == 39)
                     { jjCheckNAddTwoStates(26, 27); }
                  else if (curChar == 46)
                     { jjCheckNAdd(19); }
                  break;
               case 263:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(24); }
                  break;
               case 9:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(24); }
                  break;
               case 267:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(24); }
                  break;
               case 330:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(24); }
                  break;
               case 193:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(24); }
                  break;
               case 149:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(24); }
                  break;
               case 247:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(24); }
                  break;
               case 331:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(24); }
                  break;
               case 8:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(24); }
                  break;
               case 90:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(24); }
                  break;
               case 373:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(24); }
                  break;
               case 140:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(24); }
                  break;
               case 192:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(24); }
                  break;
               case 98:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(24); }
                  break;
               case 18:
                  if (curChar == 46)
                     { jjCheckNAdd(19); }
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAddTwoStates(19, 20); }
                  break;
               case 21:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(22); }
                  break;
               case 22:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAdd(22); }
                  break;
               case 25:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(26, 27); }
                  break;
               case 26:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(26, 27); }
                  break;
               case 27:
                  if (curChar != 39)
                     break;
                  if (kind > 143)
                     kind = 143;
                  jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 28:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(29, 27); }
                  break;
               case 29:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(29, 27); }
                  break;
               case 30:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(31, 32); }
                  break;
               case 31:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     { jjCheckNAddTwoStates(31, 32); }
                  break;
               case 32:
                  if (curChar == 34 && kind > 144)
                     kind = 144;
                  break;
               case 34:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjAddStates(7, 8); }
                  break;
               case 37:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjAddStates(9, 10); }
                  break;
               case 39:
                  if (curChar != 45)
                     break;
                  if (kind > 146)
                     kind = 146;
                  { jjCheckNAdd(40); }
                  break;
               case 40:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 146)
                     kind = 146;
                  { jjCheckNAdd(40); }
                  break;
               case 41:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 42:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(43, 44); }
                  break;
               case 43:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(43, 44); }
                  break;
               case 44:
                  if (curChar == 42)
                     { jjCheckNAddStates(11, 13); }
                  break;
               case 45:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(46, 44); }
                  break;
               case 46:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(46, 44); }
                  break;
               case 47:
                  if (curChar == 47 && kind > 147)
                     kind = 147;
                  break;
               case 48:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 230:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 138)
                     kind = 138;
                  { jjCheckNAddStates(0, 6); }
                  break;
               case 231:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 18); }
                  break;
               case 232:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(232, 233); }
                  break;
               case 233:
                  if (curChar != 46)
                     break;
                  if (kind > 137)
                     kind = 137;
                  jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 235:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(236); }
                  break;
               case 236:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAdd(236); }
                  break;
               case 237:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(237, 238); }
                  break;
               case 239:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(240); }
                  break;
               case 240:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAdd(240); }
                  break;
               case 241:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 138)
                     kind = 138;
                  { jjCheckNAdd(241); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 211:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(24); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(23, 24); }
                  }
                  if ((0x10000000100L & l) != 0L)
                  {
                     if (kind > 49)
                        kind = 49;
                  }
                  else if ((0x4000000040L & l) != 0L)
                  {
                     if (kind > 48)
                        kind = 48;
                  }
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  else if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 279:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(24); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(23, 24); }
                  }
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 291;
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 286;
                  if ((0x200000002L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                  }
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(23, 24); }
                  }
                  else if (curChar == 91)
                     { jjCheckNAddTwoStates(37, 38); }
                  else if (curChar == 96)
                     { jjCheckNAddTwoStates(34, 35); }
                  if ((0x400000004L & l) != 0L)
                     { jjAddStates(14, 17); }
                  else if ((0x1000000010L & l) != 0L)
                     { jjAddStates(18, 25); }
                  else if ((0x1000000010000L & l) != 0L)
                     { jjAddStates(26, 33); }
                  else if ((0x8000000080000L & l) != 0L)
                     { jjAddStates(34, 43); }
                  else if ((0x10000000100000L & l) != 0L)
                     { jjAddStates(44, 47); }
                  else if ((0x4000000040000L & l) != 0L)
                     { jjAddStates(48, 56); }
                  else if ((0x2000000020L & l) != 0L)
                     { jjAddStates(57, 61); }
                  else if ((0x800000008L & l) != 0L)
                     { jjAddStates(62, 70); }
                  else if ((0x200000002L & l) != 0L)
                     { jjAddStates(71, 77); }
                  else if ((0x10000000100L & l) != 0L)
                     { jjAddStates(78, 79); }
                  else if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(80, 81); }
                  else if ((0x40000000400000L & l) != 0L)
                     { jjAddStates(82, 83); }
                  else if ((0x80000000800000L & l) != 0L)
                     { jjAddStates(84, 85); }
                  else if ((0x100000001000000L & l) != 0L)
                     { jjAddStates(86, 87); }
                  else if ((0x100000001000L & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                  }
                  else if ((0x20000000200L & l) != 0L)
                  {
                     if (kind > 40)
                        kind = 40;
                  }
                  else if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 4;
                  if ((0x4000000040000L & l) != 0L)
                  {
                     if (kind > 50)
                        kind = 50;
                  }
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  else if ((0x800000008L & l) != 0L)
                  {
                     if (kind > 24)
                        kind = 24;
                  }
                  else if ((0x200000002L & l) != 0L)
                  {
                     if (kind > 19)
                        kind = 19;
                  }
                  break;
               case 263:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(24); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(23, 24); }
                  }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 292;
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 269;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 264;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 287;
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 273;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 9:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(24); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(23, 24); }
                  }
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 267:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(24); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(23, 24); }
                  }
                  if ((0x800000008000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                  }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 330:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(24); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(23, 24); }
                  }
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 344;
                  else if ((0x100000001000L & l) != 0L)
                  {
                     if (kind > 31)
                        kind = 31;
                  }
                  else if ((0x4000000040L & l) != 0L)
                  {
                     if (kind > 30)
                        kind = 30;
                  }
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 341;
                  else if ((0x100000001000L & l) != 0L)
                  {
                     if (kind > 31)
                        kind = 31;
                  }
                  else if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 193:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(24); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(23, 24); }
                  }
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 228;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 223;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 149:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(24); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(23, 24); }
                  }
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  else if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 159;
                  else if ((0x100000001000L & l) != 0L)
                  {
                     if (kind > 26)
                        kind = 26;
                  }
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  else if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 247:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(24); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(23, 24); }
                  }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 258;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 249;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 254;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 331:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(24); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(23, 24); }
                  }
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 357;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 345;
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 354;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 342;
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(334); }
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(334); }
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 332;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 8:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(24); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(23, 24); }
                  }
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 90:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(24); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(23, 24); }
                  }
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 93;
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 373:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(24); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(23, 24); }
                  }
                  break;
               case 140:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(24); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(23, 24); }
                  }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 169;
                  else if ((0x100000001000L & l) != 0L)
                  {
                     if (kind > 25)
                        kind = 25;
                  }
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 139;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 143;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 160;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 157;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 151;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 192:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(24); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(23, 24); }
                  }
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  else if ((0x200000002000L & l) != 0L)
                  {
                     if (kind > 47)
                        kind = 47;
                  }
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 222;
                  else if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 201;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 214;
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 98:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(24); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(23, 24); }
                  }
                  if ((0x800000008000L & l) != 0L)
                  {
                     if (kind > 39)
                        kind = 39;
                  }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 1:
                  if ((0x800000008L & l) != 0L && kind > 24)
                     kind = 24;
                  break;
               case 2:
                  if ((0x10000000100000L & l) != 0L && kind > 36)
                     kind = 36;
                  break;
               case 3:
               case 185:
                  if ((0x20000000200L & l) != 0L)
                     { jjCheckNAdd(2); }
                  break;
               case 4:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if ((0x10000000100000L & l) != 0L && kind > 40)
                     kind = 40;
                  break;
               case 7:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 10:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if ((0x20000000200L & l) != 0L && kind > 40)
                     kind = 40;
                  break;
               case 12:
                  if ((0x10000000100000L & l) != 0L && kind > 41)
                     kind = 41;
                  break;
               case 13:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if ((0x100000001000L & l) != 0L && kind > 41)
                     kind = 41;
                  break;
               case 17:
                  if ((0x4000000040000L & l) != 0L && kind > 50)
                     kind = 50;
                  break;
               case 20:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(88, 89); }
                  break;
               case 23:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAddTwoStates(23, 24); }
                  break;
               case 24:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(24); }
                  break;
               case 26:
                  { jjCheckNAddTwoStates(26, 27); }
                  break;
               case 29:
                  { jjCheckNAddTwoStates(29, 27); }
                  break;
               case 31:
                  { jjAddStates(90, 91); }
                  break;
               case 33:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(34, 35); }
                  break;
               case 34:
                  if ((0xfffffffeffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(34, 35); }
                  break;
               case 35:
                  if (curChar == 96 && kind > 144)
                     kind = 144;
                  break;
               case 36:
                  if (curChar == 91)
                     { jjCheckNAddTwoStates(37, 38); }
                  break;
               case 37:
                  if ((0xffffffffdfffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(37, 38); }
                  break;
               case 38:
                  if (curChar == 93 && kind > 144)
                     kind = 144;
                  break;
               case 40:
                  if (kind > 146)
                     kind = 146;
                  jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 43:
                  { jjCheckNAddTwoStates(43, 44); }
                  break;
               case 45:
               case 46:
                  { jjCheckNAddTwoStates(46, 44); }
                  break;
               case 49:
                  if ((0x100000001000000L & l) != 0L)
                     { jjAddStates(86, 87); }
                  break;
               case 50:
                  if ((0x200000002000000L & l) != 0L && kind > 64)
                     kind = 64;
                  break;
               case 51:
               case 55:
                  if ((0x4000000040000L & l) != 0L)
                     { jjCheckNAdd(50); }
                  break;
               case 52:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 56:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if ((0x80000000800000L & l) != 0L)
                     { jjAddStates(84, 85); }
                  break;
               case 60:
                  if ((0x4000000040000L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 61:
               case 67:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(60); }
                  break;
               case 62:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 68:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if ((0x40000000400000L & l) != 0L)
                     { jjAddStates(82, 83); }
                  break;
               case 74:
                  if ((0x2000000020L & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 75:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 81:
                  if ((0x4000000040000L & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 82:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 83:
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(80, 81); }
                  break;
               case 84:
                  if ((0x2000000020L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 85:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 86:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 88:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 91:
                  if ((0x4000000040L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 92:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if ((0x10000000100L & l) != 0L)
                     { jjAddStates(78, 79); }
                  break;
               case 96:
                  if ((0x10000000100000L & l) != 0L && kind > 39)
                     kind = 39;
                  break;
               case 97:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 99:
                  if ((0x800000008000L & l) != 0L && kind > 39)
                     kind = 39;
                  break;
               case 100:
                  if ((0x200000002L & l) != 0L)
                     { jjAddStates(71, 77); }
                  break;
               case 101:
                  if ((0x10000000100000L & l) != 0L && kind > 18)
                     kind = 18;
                  break;
               case 102:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 103:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if ((0x800000008L & l) != 0L && kind > 18)
                     kind = 18;
                  break;
               case 107:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if ((0x1000000010L & l) != 0L && kind > 19)
                     kind = 19;
                  break;
               case 109:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if ((0x2000000020L & l) != 0L && kind > 20)
                     kind = 20;
                  break;
               case 114:
               case 119:
                  if ((0x40000000400000L & l) != 0L)
                     { jjCheckNAdd(113); }
                  break;
               case 115:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 120:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 122:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if ((0x2000000020L & l) != 0L && kind > 21)
                     kind = 21;
                  break;
               case 125:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 130:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if ((0x4000000040000L & l) != 0L && kind > 21)
                     kind = 21;
                  break;
               case 133:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if ((0x800000008L & l) != 0L)
                     { jjAddStates(62, 70); }
                  break;
               case 136:
                  if ((0x2000000020L & l) != 0L && kind > 24)
                     kind = 24;
                  break;
               case 137:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 141:
                  if ((0x4000000040000L & l) != 0L && kind > 25)
                     kind = 25;
                  break;
               case 142:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 143:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if ((0x100000001000L & l) != 0L && kind > 25)
                     kind = 25;
                  break;
               case 146:
                  if ((0x400000004000L & l) != 0L && kind > 26)
                     kind = 26;
                  break;
               case 147:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 150:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if ((0x100000001000L & l) != 0L && kind > 26)
                     kind = 26;
                  break;
               case 152:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if ((0x2000000020L & l) != 0L && kind > 27)
                     kind = 27;
                  break;
               case 154:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 155:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 157:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 159:
                  if ((0x1000000010000L & l) != 0L && kind > 27)
                     kind = 27;
                  break;
               case 160:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if ((0x10000000100000L & l) != 0L && kind > 28)
                     kind = 28;
                  break;
               case 163:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if ((0x400000004000L & l) != 0L && kind > 28)
                     kind = 28;
                  break;
               case 169:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(57, 61); }
                  break;
               case 172:
                  if ((0x10000000100000L & l) != 0L && kind > 34)
                     kind = 34;
                  break;
               case 173:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if ((0x1000000010L & l) != 0L && kind > 34)
                     kind = 34;
                  break;
               case 176:
                  if ((0x2000000020L & l) != 0L && kind > 35)
                     kind = 35;
                  break;
               case 177:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 181:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if ((0x800000008L & l) != 0L && kind > 35)
                     kind = 35;
                  break;
               case 183:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 184:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 186:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if ((0x4000000040000L & l) != 0L)
                     { jjAddStates(48, 56); }
                  break;
               case 188:
                  if ((0x4000000040000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 189:
               case 194:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(188); }
                  break;
               case 190:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 195:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 197:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if ((0x80000000800L & l) != 0L && kind > 47)
                     kind = 47;
                  break;
               case 200:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 202:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 203:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if ((0x200000002000L & l) != 0L && kind > 47)
                     kind = 47;
                  break;
               case 205:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if ((0x4000000040000L & l) != 0L && kind > 48)
                     kind = 48;
                  break;
               case 207:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 209:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 210:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 212:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 214:
                  if ((0x4000000040L & l) != 0L && kind > 48)
                     kind = 48;
                  break;
               case 215:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 217:
                  if ((0x4000000040000L & l) != 0L && kind > 49)
                     kind = 49;
                  break;
               case 218:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 219:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 220:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 221:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 222:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 223:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 224:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if ((0x10000000100L & l) != 0L && kind > 49)
                     kind = 49;
                  break;
               case 226:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 228:
                  if ((0x400000004000L & l) != 0L && kind > 50)
                     kind = 50;
                  break;
               case 229:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 234:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(92, 93); }
                  break;
               case 238:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(94, 95); }
                  break;
               case 242:
                  if ((0x10000000100000L & l) != 0L)
                     { jjAddStates(44, 47); }
                  break;
               case 243:
                  if ((0x8000000080L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 244:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 248:
                  if ((0x20000000200L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 249:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 250:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 251:
                  if ((0x2000000020L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 252:
               case 256:
                  if ((0x100000001000L & l) != 0L)
                     { jjCheckNAdd(251); }
                  break;
               case 253:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 254:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 257:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 258:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 259:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 260:
                  if ((0x8000000080000L & l) != 0L)
                     { jjAddStates(34, 43); }
                  break;
               case 261:
                  if ((0x2000000020L & l) != 0L && kind > 51)
                     kind = 51;
                  break;
               case 262:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 264:
                  if ((0x40000000400000L & l) != 0L && kind > 51)
                     kind = 51;
                  break;
               case 265:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 266:
                  if ((0x80000000800000L & l) != 0L && kind > 53)
                     kind = 53;
                  break;
               case 268:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 269:
                  if ((0x800000008000L & l) != 0L && kind > 53)
                     kind = 53;
                  break;
               case 270:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 271:
                  if ((0x100000001000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 272:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 273:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 274:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 275:
                  if ((0x800000008000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 276:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 277:
                  if ((0x10000000100000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 278:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 280:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 281:
                  if ((0x200000002L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 282:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 283:
                  if ((0x1000000010000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 284:
               case 289:
                  if ((0x20000000200000L & l) != 0L)
                     { jjCheckNAdd(283); }
                  break;
               case 285:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 286:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 287:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 288:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 290:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 291:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 292:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 293:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 292;
                  break;
               case 294:
                  if ((0x1000000010000L & l) != 0L)
                     { jjAddStates(26, 33); }
                  break;
               case 295:
                  if ((0x1000000010L & l) != 0L && kind > 42)
                     kind = 42;
                  break;
               case 296:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 297:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 298:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 299:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 300:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 301:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 302:
                  if ((0x80000000800000L & l) != 0L && kind > 42)
                     kind = 42;
                  break;
               case 303:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 304:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 305:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 306:
                  if ((0x2000000020L & l) != 0L && kind > 43)
                     kind = 43;
                  break;
               case 307:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 308:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 309:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 310:
                  if ((0x20000000200000L & l) != 0L && kind > 43)
                     kind = 43;
                  break;
               case 311:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 312:
                  if ((0x10000000100000L & l) != 0L && kind > 44)
                     kind = 44;
                  break;
               case 313:
               case 316:
                  if ((0x400000004000L & l) != 0L)
                     { jjCheckNAdd(312); }
                  break;
               case 314:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 315:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 317:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 318:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 319:
                  if ((0x10000000100000L & l) != 0L && kind > 45)
                     kind = 45;
                  break;
               case 320:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 321:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 322:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 323:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 324:
                  if ((0x800000008000L & l) != 0L && kind > 45)
                     kind = 45;
                  break;
               case 325:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 326:
                  if ((0x1000000010L & l) != 0L)
                     { jjAddStates(18, 25); }
                  break;
               case 327:
                  if ((0x2000000020L & l) != 0L && kind > 30)
                     kind = 30;
                  break;
               case 328:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 327;
                  break;
               case 329:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 332:
                  if ((0x4000000040L & l) != 0L && kind > 30)
                     kind = 30;
                  break;
               case 333:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 334:
                  if ((0x100000001000L & l) != 0L && kind > 31)
                     kind = 31;
                  break;
               case 335:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(334); }
                  break;
               case 336:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(334); }
                  break;
               case 337:
                  if ((0x2000000020L & l) != 0L && kind > 32)
                     kind = 32;
                  break;
               case 338:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 337;
                  break;
               case 339:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 340:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 341:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 342:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 343:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 344:
                  if ((0x800000008L & l) != 0L && kind > 32)
                     kind = 32;
                  break;
               case 345:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 346:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 347:
                  if ((0x10000000100000L & l) != 0L && kind > 33)
                     kind = 33;
                  break;
               case 348:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 349:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 350:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 351:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 352:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 353:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 354:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 355:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 356:
                  if ((0x800000008L & l) != 0L && kind > 33)
                     kind = 33;
                  break;
               case 357:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 358:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 359:
                  if ((0x400000004L & l) != 0L)
                     { jjAddStates(14, 17); }
                  break;
               case 360:
                  if ((0x80000000800L & l) != 0L && kind > 22)
                     kind = 22;
                  break;
               case 361:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 362:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 363:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 364:
                  if ((0x2000000020L & l) != 0L && kind > 22)
                     kind = 22;
                  break;
               case 365:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 366:
                  if ((0x2000000020L & l) != 0L && kind > 23)
                     kind = 23;
                  break;
               case 367:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 368:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 369:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 370:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 369;
                  break;
               case 371:
                  if ((0x20000000200L & l) != 0L && kind > 23)
                     kind = 23;
                  break;
               case 372:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 26:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(26, 27); }
                  break;
               case 29:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(29, 27); }
                  break;
               case 31:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(90, 91); }
                  break;
               case 34:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(7, 8); }
                  break;
               case 37:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(9, 10); }
                  break;
               case 40:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 146)
                     kind = 146;
                  jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 43:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(43, 44); }
                  break;
               case 45:
               case 46:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(46, 44); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 373 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1, long active2){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x4080L) != 0L)
            return 34;
         if ((active0 & 0xf00L) != 0L)
         {
            jjmatchedKind = 140;
            return 60;
         }
         return -1;
      case 1:
         if ((active0 & 0xf00L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 60;
         }
         return -1;
      case 2:
         if ((active0 & 0xf00L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 2;
            return 60;
         }
         return -1;
      case 3:
         if ((active0 & 0x600L) != 0L)
            return 60;
         if ((active0 & 0x900L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 3;
            return 60;
         }
         return -1;
      case 4:
         if ((active0 & 0x900L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 4;
            return 60;
         }
         return -1;
      case 5:
         if ((active0 & 0x100L) != 0L)
            return 60;
         if ((active0 & 0x800L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 5;
            return 60;
         }
         return -1;
      case 6:
         if ((active0 & 0x800L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 6;
            return 60;
         }
         return -1;
      case 7:
         if ((active0 & 0x800L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 7;
            return 60;
         }
         return -1;
      case 8:
         if ((active0 & 0x800L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 8;
            return 60;
         }
         return -1;
      case 9:
         if ((active0 & 0x800L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 9;
            return 60;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1, long active2){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1, active2), pos + 1);
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 9:
         return jjStopAtPos(0, 2);
      case 32:
         return jjStopAtPos(0, 1);
      case 40:
         return jjStartNfaWithStates_0(0, 7, 34);
      case 59:
         return jjStopAtPos(0, 145);
      case 61:
         return jjStartNfaWithStates_0(0, 14, 34);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa1_0(0x200L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa1_0(0x400L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa1_0(0x100L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa1_0(0x800L);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, 0L, 0L);
      return 1;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x200L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x100L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x400L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0x800L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, 0L, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x800L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x700L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, 0L, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(3, 10, 60);
         return jjMoveStringLiteralDfa4_0(active0, 0x100L);
      case 76:
      case 108:
         if ((active0 & 0x200L) != 0L)
            return jjStartNfaWithStates_0(3, 9, 60);
         break;
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0x800L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, 0L, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x100L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa5_0(active0, 0x800L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, 0L, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa6_0(active0, 0x800L);
      case 84:
      case 116:
         if ((active0 & 0x100L) != 0L)
            return jjStartNfaWithStates_0(5, 8, 60);
         break;
      default :
         break;
   }
   return jjStartNfa_0(4, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(4, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, 0L, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa7_0(active0, 0x800L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(5, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, 0L, 0L);
      return 7;
   }
   switch(curChar)
   {
      case 84:
      case 116:
         return jjMoveStringLiteralDfa8_0(active0, 0x800L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(6, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, 0L, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa9_0(active0, 0x800L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, 0L, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 79:
      case 111:
         return jjMoveStringLiteralDfa10_0(active0, 0x800L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 78:
      case 110:
         if ((active0 & 0x800L) != 0L)
            return jjStartNfaWithStates_0(10, 11, 60);
         break;
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 60;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 60:
                  if ((0xf7fffffeffffd9ffL & l) != 0L)
                  {
                     if (kind > 149)
                        kind = 149;
                     { jjCheckNAdd(34); }
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  break;
               case 0:
                  if ((0xf7fffffeffffd9ffL & l) != 0L)
                  {
                     if (kind > 149)
                        kind = 149;
                     { jjCheckNAdd(34); }
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 13)
                        kind = 13;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 138)
                        kind = 138;
                     { jjCheckNAddStates(96, 102); }
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 27;
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 24;
                  else if (curChar == 34)
                     { jjCheckNAddTwoStates(16, 17); }
                  else if (curChar == 39)
                     { jjCheckNAddTwoStates(11, 12); }
                  else if (curChar == 46)
                     { jjCheckNAdd(4); }
                  else if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (curChar == 10 && kind > 13)
                     kind = 13;
                  break;
               case 2:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if (curChar == 46)
                     { jjCheckNAdd(4); }
                  break;
               case 4:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 6:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAdd(7); }
                  break;
               case 9:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 10:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 11:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 12:
                  if (curChar != 39)
                     break;
                  if (kind > 143)
                     kind = 143;
                  jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 13:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(14, 12); }
                  break;
               case 14:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(14, 12); }
                  break;
               case 15:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(16, 17); }
                  break;
               case 16:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     { jjCheckNAddTwoStates(16, 17); }
                  break;
               case 17:
                  if (curChar == 34 && kind > 144)
                     kind = 144;
                  break;
               case 19:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjAddStates(103, 104); }
                  break;
               case 22:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjAddStates(105, 106); }
                  break;
               case 24:
                  if (curChar != 45)
                     break;
                  if (kind > 146)
                     kind = 146;
                  { jjCheckNAdd(25); }
                  break;
               case 25:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 146)
                     kind = 146;
                  { jjCheckNAdd(25); }
                  break;
               case 26:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 27:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(28, 29); }
                  break;
               case 28:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(28, 29); }
                  break;
               case 29:
                  if (curChar == 42)
                     { jjCheckNAddStates(107, 109); }
                  break;
               case 30:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(31, 29); }
                  break;
               case 31:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(31, 29); }
                  break;
               case 32:
                  if (curChar == 47 && kind > 147)
                     kind = 147;
                  break;
               case 33:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 34:
                  if ((0xf7fffffeffffd9ffL & l) == 0L)
                     break;
                  if (kind > 149)
                     kind = 149;
                  { jjCheckNAdd(34); }
                  break;
               case 48:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 138)
                     kind = 138;
                  { jjCheckNAddStates(96, 102); }
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(49, 3); }
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(50, 51); }
                  break;
               case 51:
                  if (curChar != 46)
                     break;
                  if (kind > 137)
                     kind = 137;
                  jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 53:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(54); }
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAdd(54); }
                  break;
               case 55:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(55, 56); }
                  break;
               case 57:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(58); }
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAdd(58); }
                  break;
               case 59:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 138)
                     kind = 138;
                  { jjCheckNAdd(59); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 60:
                  if (kind > 149)
                     kind = 149;
                  { jjCheckNAdd(34); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  break;
               case 0:
                  if (kind > 149)
                     kind = 149;
                  { jjCheckNAdd(34); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  else if (curChar == 91)
                     { jjCheckNAddTwoStates(22, 23); }
                  else if (curChar == 96)
                     { jjCheckNAddTwoStates(19, 20); }
                  if ((0x400000004000L & l) != 0L)
                     { jjAddStates(110, 111); }
                  break;
               case 5:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(112, 113); }
                  break;
               case 8:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAddTwoStates(8, 9); }
                  break;
               case 9:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 11:
                  { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 14:
                  { jjCheckNAddTwoStates(14, 12); }
                  break;
               case 16:
                  { jjAddStates(114, 115); }
                  break;
               case 18:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(19, 20); }
                  break;
               case 19:
                  if ((0xfffffffeffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(19, 20); }
                  break;
               case 20:
                  if (curChar == 96 && kind > 144)
                     kind = 144;
                  break;
               case 21:
                  if (curChar == 91)
                     { jjCheckNAddTwoStates(22, 23); }
                  break;
               case 22:
                  if ((0xffffffffdfffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(22, 23); }
                  break;
               case 23:
                  if (curChar == 93 && kind > 144)
                     kind = 144;
                  break;
               case 25:
                  if (kind > 146)
                     kind = 146;
                  jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 28:
                  { jjCheckNAddTwoStates(28, 29); }
                  break;
               case 30:
               case 31:
                  { jjCheckNAddTwoStates(31, 29); }
                  break;
               case 34:
                  if (kind > 149)
                     kind = 149;
                  { jjCheckNAdd(34); }
                  break;
               case 35:
                  if ((0x400000004000L & l) != 0L)
                     { jjAddStates(110, 111); }
                  break;
               case 36:
                  if ((0x40000000400000L & l) != 0L && kind > 12)
                     kind = 12;
                  break;
               case 37:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if ((0x2000000020L & l) != 0L && kind > 12)
                     kind = 12;
                  break;
               case 41:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 42:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 52:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(116, 117); }
                  break;
               case 56:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(118, 119); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 60:
               case 34:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 149)
                     kind = 149;
                  { jjCheckNAdd(34); }
                  break;
               case 0:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 149)
                     kind = 149;
                  { jjCheckNAdd(34); }
                  break;
               case 11:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 14:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(14, 12); }
                  break;
               case 16:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(114, 115); }
                  break;
               case 19:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(103, 104); }
                  break;
               case 22:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(105, 106); }
                  break;
               case 25:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 146)
                     kind = 146;
                  jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 28:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(28, 29); }
                  break;
               case 30:
               case 31:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(31, 29); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 60 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_2(int pos, long active0, long active1, long active2){
   switch (pos)
   {
      case 0:
         if ((active0 & 0xf00L) != 0L)
         {
            jjmatchedKind = 140;
            return 59;
         }
         return -1;
      case 1:
         if ((active0 & 0xf00L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 59;
         }
         return -1;
      case 2:
         if ((active0 & 0xf00L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 2;
            return 59;
         }
         return -1;
      case 3:
         if ((active0 & 0x900L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 3;
            return 59;
         }
         if ((active0 & 0x600L) != 0L)
            return 59;
         return -1;
      case 4:
         if ((active0 & 0x900L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 4;
            return 59;
         }
         return -1;
      case 5:
         if ((active0 & 0x800L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 5;
            return 59;
         }
         if ((active0 & 0x100L) != 0L)
            return 59;
         return -1;
      case 6:
         if ((active0 & 0x800L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 6;
            return 59;
         }
         return -1;
      case 7:
         if ((active0 & 0x800L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 7;
            return 59;
         }
         return -1;
      case 8:
         if ((active0 & 0x800L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 8;
            return 59;
         }
         return -1;
      case 9:
         if ((active0 & 0x800L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 9;
            return 59;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_2(int pos, long active0, long active1, long active2){
   return jjMoveNfa_2(jjStopStringLiteralDfa_2(pos, active0, active1, active2), pos + 1);
}
private int jjMoveStringLiteralDfa0_2(){
   switch(curChar)
   {
      case 9:
         return jjStopAtPos(0, 2);
      case 32:
         return jjStopAtPos(0, 1);
      case 40:
         return jjStopAtPos(0, 7);
      case 59:
         return jjStopAtPos(0, 145);
      case 61:
         return jjStopAtPos(0, 14);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa1_2(0x200L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa1_2(0x400L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa1_2(0x100L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa1_2(0x800L);
      default :
         return jjMoveNfa_2(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_2(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(0, active0, 0L, 0L);
      return 1;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_2(active0, 0x200L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa2_2(active0, 0x100L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa2_2(active0, 0x400L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_2(active0, 0x800L);
      default :
         break;
   }
   return jjStartNfa_2(0, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa2_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(0, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(1, active0, 0L, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_2(active0, 0x800L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_2(active0, 0x700L);
      default :
         break;
   }
   return jjStartNfa_2(1, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa3_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(1, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(2, active0, 0L, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x400L) != 0L)
            return jjStartNfaWithStates_2(3, 10, 59);
         return jjMoveStringLiteralDfa4_2(active0, 0x100L);
      case 76:
      case 108:
         if ((active0 & 0x200L) != 0L)
            return jjStartNfaWithStates_2(3, 9, 59);
         break;
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_2(active0, 0x800L);
      default :
         break;
   }
   return jjStartNfa_2(2, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa4_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(2, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(3, active0, 0L, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa5_2(active0, 0x100L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa5_2(active0, 0x800L);
      default :
         break;
   }
   return jjStartNfa_2(3, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa5_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(3, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(4, active0, 0L, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa6_2(active0, 0x800L);
      case 84:
      case 116:
         if ((active0 & 0x100L) != 0L)
            return jjStartNfaWithStates_2(5, 8, 59);
         break;
      default :
         break;
   }
   return jjStartNfa_2(4, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa6_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(4, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(5, active0, 0L, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa7_2(active0, 0x800L);
      default :
         break;
   }
   return jjStartNfa_2(5, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa7_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(5, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(6, active0, 0L, 0L);
      return 7;
   }
   switch(curChar)
   {
      case 84:
      case 116:
         return jjMoveStringLiteralDfa8_2(active0, 0x800L);
      default :
         break;
   }
   return jjStartNfa_2(6, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa8_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(6, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(7, active0, 0L, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa9_2(active0, 0x800L);
      default :
         break;
   }
   return jjStartNfa_2(7, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa9_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(7, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(8, active0, 0L, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 79:
      case 111:
         return jjMoveStringLiteralDfa10_2(active0, 0x800L);
      default :
         break;
   }
   return jjStartNfa_2(8, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa10_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(8, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(9, active0, 0L, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 78:
      case 110:
         if ((active0 & 0x800L) != 0L)
            return jjStartNfaWithStates_2(10, 11, 59);
         break;
      default :
         break;
   }
   return jjStartNfa_2(9, active0, 0L, 0L);
}
private int jjStartNfaWithStates_2(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_2(state, pos + 1);
}
private int jjMoveNfa_2(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 59;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 138)
                        kind = 138;
                     { jjCheckNAddStates(120, 126); }
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 13)
                        kind = 13;
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 27;
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 24;
                  else if (curChar == 34)
                     { jjCheckNAddTwoStates(16, 17); }
                  else if (curChar == 39)
                     { jjCheckNAddTwoStates(11, 12); }
                  else if (curChar == 46)
                     { jjCheckNAdd(4); }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 59:
               case 9:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 1:
                  if (curChar == 10 && kind > 13)
                     kind = 13;
                  break;
               case 2:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if (curChar == 46)
                     { jjCheckNAdd(4); }
                  break;
               case 4:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 6:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAdd(7); }
                  break;
               case 10:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 11:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 12:
                  if (curChar != 39)
                     break;
                  if (kind > 143)
                     kind = 143;
                  jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 13:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(14, 12); }
                  break;
               case 14:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(14, 12); }
                  break;
               case 15:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(16, 17); }
                  break;
               case 16:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     { jjCheckNAddTwoStates(16, 17); }
                  break;
               case 17:
                  if (curChar == 34 && kind > 144)
                     kind = 144;
                  break;
               case 19:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjAddStates(103, 104); }
                  break;
               case 22:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjAddStates(105, 106); }
                  break;
               case 24:
                  if (curChar != 45)
                     break;
                  if (kind > 146)
                     kind = 146;
                  { jjCheckNAdd(25); }
                  break;
               case 25:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 146)
                     kind = 146;
                  { jjCheckNAdd(25); }
                  break;
               case 26:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 27:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(28, 29); }
                  break;
               case 28:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(28, 29); }
                  break;
               case 29:
                  if (curChar == 42)
                     { jjCheckNAddStates(107, 109); }
                  break;
               case 30:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(31, 29); }
                  break;
               case 31:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(31, 29); }
                  break;
               case 32:
                  if (curChar == 47 && kind > 147)
                     kind = 147;
                  break;
               case 33:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 47:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 138)
                     kind = 138;
                  { jjCheckNAddStates(120, 126); }
                  break;
               case 48:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(48, 3); }
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(49, 50); }
                  break;
               case 50:
                  if (curChar != 46)
                     break;
                  if (kind > 137)
                     kind = 137;
                  jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 52:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(53); }
                  break;
               case 53:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAdd(53); }
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(54, 55); }
                  break;
               case 56:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(57); }
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAdd(57); }
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 138)
                     kind = 138;
                  { jjCheckNAdd(58); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  else if (curChar == 91)
                     { jjCheckNAddTwoStates(22, 23); }
                  else if (curChar == 96)
                     { jjCheckNAddTwoStates(19, 20); }
                  if ((0x400000004000L & l) != 0L)
                     { jjAddStates(127, 128); }
                  break;
               case 59:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  break;
               case 5:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(112, 113); }
                  break;
               case 8:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAddTwoStates(8, 9); }
                  break;
               case 9:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 11:
                  { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 14:
                  { jjCheckNAddTwoStates(14, 12); }
                  break;
               case 16:
                  { jjAddStates(114, 115); }
                  break;
               case 18:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(19, 20); }
                  break;
               case 19:
                  if ((0xfffffffeffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(19, 20); }
                  break;
               case 20:
                  if (curChar == 96 && kind > 144)
                     kind = 144;
                  break;
               case 21:
                  if (curChar == 91)
                     { jjCheckNAddTwoStates(22, 23); }
                  break;
               case 22:
                  if ((0xffffffffdfffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(22, 23); }
                  break;
               case 23:
                  if (curChar == 93 && kind > 144)
                     kind = 144;
                  break;
               case 25:
                  if (kind > 146)
                     kind = 146;
                  jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 28:
                  { jjCheckNAddTwoStates(28, 29); }
                  break;
               case 30:
               case 31:
                  { jjCheckNAddTwoStates(31, 29); }
                  break;
               case 34:
                  if ((0x400000004000L & l) != 0L)
                     { jjAddStates(127, 128); }
                  break;
               case 35:
                  if ((0x40000000400000L & l) != 0L && kind > 12)
                     kind = 12;
                  break;
               case 36:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if ((0x2000000020L & l) != 0L && kind > 12)
                     kind = 12;
                  break;
               case 40:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 42:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 51:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(129, 130); }
                  break;
               case 55:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(131, 132); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 11:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 14:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(14, 12); }
                  break;
               case 16:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(114, 115); }
                  break;
               case 19:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(103, 104); }
                  break;
               case 22:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(105, 106); }
                  break;
               case 25:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 146)
                     kind = 146;
                  jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 28:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(28, 29); }
                  break;
               case 30:
               case 31:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(31, 29); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 59 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_3(int pos, long active0, long active1, long active2){
   switch (pos)
   {
      case 0:
         if ((active0 & 0xe6L) != 0L)
            return 48;
         if ((active0 & 0x300L) != 0L)
         {
            jjmatchedKind = 140;
            return 49;
         }
         return -1;
      case 1:
         if ((active0 & 0x300L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 49;
         }
         return -1;
      case 2:
         if ((active0 & 0x300L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 2;
            return 49;
         }
         return -1;
      case 3:
         if ((active0 & 0x200L) != 0L)
            return 49;
         if ((active0 & 0x100L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 3;
            return 49;
         }
         return -1;
      case 4:
         if ((active0 & 0x100L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 4;
            return 49;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_3(int pos, long active0, long active1, long active2){
   return jjMoveNfa_3(jjStopStringLiteralDfa_3(pos, active0, active1, active2), pos + 1);
}
private int jjMoveStringLiteralDfa0_3(){
   switch(curChar)
   {
      case 9:
         return jjStartNfaWithStates_3(0, 2, 48);
      case 10:
         return jjStartNfaWithStates_3(0, 6, 48);
      case 13:
         return jjStartNfaWithStates_3(0, 5, 48);
      case 32:
         return jjStartNfaWithStates_3(0, 1, 48);
      case 40:
         return jjStartNfaWithStates_3(0, 7, 48);
      case 59:
         return jjStopAtPos(0, 145);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa1_3(0x200L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa1_3(0x100L);
      default :
         return jjMoveNfa_3(7, 0);
   }
}
private int jjMoveStringLiteralDfa1_3(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(0, active0, 0L, 0L);
      return 1;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_3(active0, 0x200L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa2_3(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_3(0, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa2_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(0, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(1, active0, 0L, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_3(active0, 0x300L);
      default :
         break;
   }
   return jjStartNfa_3(1, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa3_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(1, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(2, active0, 0L, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_3(active0, 0x100L);
      case 76:
      case 108:
         if ((active0 & 0x200L) != 0L)
            return jjStartNfaWithStates_3(3, 9, 49);
         break;
      default :
         break;
   }
   return jjStartNfa_3(2, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa4_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(2, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(3, active0, 0L, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa5_3(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_3(3, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa5_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(3, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(4, active0, 0L, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 84:
      case 116:
         if ((active0 & 0x100L) != 0L)
            return jjStartNfaWithStates_3(5, 8, 49);
         break;
      default :
         break;
   }
   return jjStartNfa_3(4, active0, 0L, 0L);
}
private int jjStartNfaWithStates_3(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_3(state, pos + 1);
}
private int jjMoveNfa_3(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 48;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 49:
                  if ((0xf7ff5fffffffffffL & l) != 0L)
                  {
                     if (kind > 148)
                        kind = 148;
                     { jjCheckNAddStates(133, 135); }
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 33;
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(6); }
                  }
                  break;
               case 48:
                  if ((0xf7ff5fffffffffffL & l) != 0L)
                  {
                     if (kind > 148)
                        kind = 148;
                     { jjCheckNAddStates(133, 135); }
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 7:
                  if ((0xf7ff5fffffffffffL & l) != 0L)
                  {
                     if (kind > 148)
                        kind = 148;
                     { jjCheckNAddStates(133, 135); }
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 33;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 138)
                        kind = 138;
                     { jjCheckNAddStates(136, 142); }
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 24;
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 21;
                  else if (curChar == 34)
                     { jjCheckNAddTwoStates(13, 14); }
                  else if (curChar == 39)
                     { jjCheckNAddTwoStates(8, 9); }
                  else if (curChar == 46)
                     { jjCheckNAdd(1); }
                  break;
               case 0:
                  if (curChar == 46)
                     { jjCheckNAdd(1); }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 3:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(4); }
                  break;
               case 4:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAdd(4); }
                  break;
               case 6:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(6); }
                  break;
               case 8:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(8, 9); }
                  break;
               case 9:
                  if (curChar != 39)
                     break;
                  if (kind > 143)
                     kind = 143;
                  jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 10:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(11, 9); }
                  break;
               case 11:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(11, 9); }
                  break;
               case 12:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(13, 14); }
                  break;
               case 13:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     { jjCheckNAddTwoStates(13, 14); }
                  break;
               case 14:
                  if (curChar == 34 && kind > 144)
                     kind = 144;
                  break;
               case 16:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjAddStates(114, 115); }
                  break;
               case 19:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjAddStates(103, 104); }
                  break;
               case 21:
                  if (curChar != 45)
                     break;
                  if (kind > 146)
                     kind = 146;
                  { jjCheckNAdd(22); }
                  break;
               case 22:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 146)
                     kind = 146;
                  { jjCheckNAdd(22); }
                  break;
               case 23:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 24:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(25, 26); }
                  break;
               case 25:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(25, 26); }
                  break;
               case 26:
                  if (curChar == 42)
                     { jjCheckNAddStates(143, 145); }
                  break;
               case 27:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(28, 26); }
                  break;
               case 28:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(28, 26); }
                  break;
               case 29:
                  if (curChar == 47 && kind > 147)
                     kind = 147;
                  break;
               case 30:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 31:
                  if ((0xf7ff5fffffffffffL & l) == 0L)
                     break;
                  if (kind > 148)
                     kind = 148;
                  { jjCheckNAddStates(133, 135); }
                  break;
               case 32:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 33:
                  if ((0xffffdfffffffffffL & l) == 0L)
                     break;
                  if (kind > 148)
                     kind = 148;
                  { jjCheckNAddStates(133, 135); }
                  break;
               case 34:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 35:
                  if ((0xfffffbffffffffffL & l) == 0L)
                     break;
                  if (kind > 148)
                     kind = 148;
                  { jjCheckNAddStates(133, 135); }
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 138)
                     kind = 138;
                  { jjCheckNAddStates(136, 142); }
                  break;
               case 37:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(37, 0); }
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(38, 39); }
                  break;
               case 39:
                  if (curChar != 46)
                     break;
                  if (kind > 137)
                     kind = 137;
                  jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 41:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(42); }
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAdd(42); }
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(43, 44); }
                  break;
               case 45:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(46); }
                  break;
               case 46:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAdd(46); }
                  break;
               case 47:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 138)
                     kind = 138;
                  { jjCheckNAdd(47); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 49:
                  if (kind > 148)
                     kind = 148;
                  { jjCheckNAddStates(133, 135); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(6); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(5, 6); }
                  }
                  break;
               case 48:
               case 31:
               case 33:
               case 35:
                  if (kind > 148)
                     kind = 148;
                  { jjCheckNAddStates(133, 135); }
                  break;
               case 7:
                  if (kind > 148)
                     kind = 148;
                  { jjCheckNAddStates(133, 135); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(5, 6); }
                  }
                  else if (curChar == 91)
                     { jjCheckNAddTwoStates(19, 20); }
                  else if (curChar == 96)
                     { jjCheckNAddTwoStates(16, 17); }
                  break;
               case 2:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(146, 147); }
                  break;
               case 5:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAddTwoStates(5, 6); }
                  break;
               case 6:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(6); }
                  break;
               case 8:
                  { jjCheckNAddTwoStates(8, 9); }
                  break;
               case 11:
                  { jjCheckNAddTwoStates(11, 9); }
                  break;
               case 13:
                  { jjAddStates(148, 149); }
                  break;
               case 15:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(16, 17); }
                  break;
               case 16:
                  if ((0xfffffffeffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(16, 17); }
                  break;
               case 17:
                  if (curChar == 96 && kind > 144)
                     kind = 144;
                  break;
               case 18:
                  if (curChar == 91)
                     { jjCheckNAddTwoStates(19, 20); }
                  break;
               case 19:
                  if ((0xffffffffdfffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(19, 20); }
                  break;
               case 20:
                  if (curChar == 93 && kind > 144)
                     kind = 144;
                  break;
               case 22:
                  if (kind > 146)
                     kind = 146;
                  jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 25:
                  { jjCheckNAddTwoStates(25, 26); }
                  break;
               case 27:
               case 28:
                  { jjCheckNAddTwoStates(28, 26); }
                  break;
               case 40:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(150, 151); }
                  break;
               case 44:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(152, 153); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 49:
               case 31:
               case 33:
               case 35:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 148)
                     kind = 148;
                  { jjCheckNAddStates(133, 135); }
                  break;
               case 48:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 148)
                     kind = 148;
                  { jjCheckNAddStates(133, 135); }
                  break;
               case 7:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 148)
                     kind = 148;
                  { jjCheckNAddStates(133, 135); }
                  break;
               case 8:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(8, 9); }
                  break;
               case 11:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(11, 9); }
                  break;
               case 13:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(148, 149); }
                  break;
               case 16:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(114, 115); }
                  break;
               case 19:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(103, 104); }
                  break;
               case 22:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 146)
                     kind = 146;
                  jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 25:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(25, 26); }
                  break;
               case 27:
               case 28:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(28, 26); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 48 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_1(int pos, long active0, long active1, long active2){
   switch (pos)
   {
      case 0:
         if ((active2 & 0x100L) != 0L)
         {
            jjmatchedKind = 140;
            return 53;
         }
         if ((active1 & 0x8400000L) != 0L)
         {
            jjmatchedKind = 140;
            return 482;
         }
         if ((active1 & 0x6000000000L) != 0L)
         {
            jjmatchedKind = 140;
            return 407;
         }
         if ((active0 & 0x400L) != 0L || (active1 & 0x3200400000000L) != 0L)
         {
            jjmatchedKind = 140;
            return 640;
         }
         if ((active1 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 140;
            return 363;
         }
         if ((active1 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 140;
            return 465;
         }
         if ((active0 & 0x100L) != 0L)
         {
            jjmatchedKind = 140;
            return 184;
         }
         if ((active0 & 0x200L) != 0L || (active1 & 0x90000L) != 0L)
         {
            jjmatchedKind = 140;
            return 537;
         }
         if ((active1 & 0x200000L) != 0L)
         {
            jjmatchedKind = 140;
            return 98;
         }
         if ((active0 & 0x800L) != 0L || (active1 & 0x4000000000000000L) != 0L)
         {
            jjmatchedKind = 140;
            return 136;
         }
         return -1;
      case 1:
         if ((active1 & 0x6000000000L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 416;
         }
         if ((active1 & 0x200000L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 97;
         }
         if ((active1 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 471;
         }
         if ((active1 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 386;
         }
         if ((active0 & 0x100L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 183;
         }
         if ((active1 & 0x90000L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 544;
         }
         if ((active1 & 0x8000000L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 515;
         }
         if ((active0 & 0x800L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 156;
         }
         if ((active0 & 0x600L) != 0L || (active1 & 0x4003200400400000L) != 0L || (active2 & 0x100L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 1;
            return 640;
         }
         return -1;
      case 2:
         if ((active1 & 0x80000L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 2;
            return 554;
         }
         if ((active0 & 0xf00L) != 0L || (active1 & 0x3242440610000L) != 0L || (active2 & 0x100L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 2;
            return 640;
         }
         if ((active1 & 0x4000000000000000L) != 0L)
            return 640;
         if ((active1 & 0x8000000L) != 0L)
         {
            jjmatchedKind = 90;
            jjmatchedPos = 2;
            return 514;
         }
         if ((active1 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 2;
            return 431;
         }
         return -1;
      case 3:
         if ((active0 & 0x900L) != 0L || (active1 & 0x3202448210000L) != 0L || (active2 & 0x100L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 3;
            return 640;
         }
         if ((active0 & 0x600L) != 0L || (active1 & 0x40000400000L) != 0L)
            return 640;
         if ((active1 & 0x4000000000L) != 0L)
            return 430;
         if ((active1 & 0x80000L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 3;
            return 553;
         }
         return -1;
      case 4:
         if ((active0 & 0x900L) != 0L || (active1 & 0x3202448290000L) != 0L || (active2 & 0x100L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 4;
            return 640;
         }
         return -1;
      case 5:
         if ((active0 & 0x800L) != 0L || (active1 & 0x202448280000L) != 0L)
         {
            if (jjmatchedPos != 5)
            {
               jjmatchedKind = 140;
               jjmatchedPos = 5;
            }
            return 640;
         }
         if ((active0 & 0x100L) != 0L || (active1 & 0x3000000010000L) != 0L || (active2 & 0x100L) != 0L)
            return 640;
         return -1;
      case 6:
         if ((active1 & 0x48000000L) != 0L)
            return 640;
         if ((active0 & 0x800L) != 0L || (active1 & 0x2202400280000L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 6;
            return 640;
         }
         return -1;
      case 7:
         if ((active1 & 0x400200000L) != 0L)
            return 640;
         if ((active0 & 0x800L) != 0L || (active1 & 0x2202000080000L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 7;
            return 640;
         }
         return -1;
      case 8:
         if ((active0 & 0x800L) != 0L || (active1 & 0x2200000080000L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 8;
            return 640;
         }
         if ((active1 & 0x2000000000L) != 0L)
            return 640;
         return -1;
      case 9:
         if ((active1 & 0x2000000000000L) != 0L)
            return 640;
         if ((active0 & 0x800L) != 0L || (active1 & 0x200000080000L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 9;
            return 640;
         }
         return -1;
      case 10:
         if ((active0 & 0x800L) != 0L)
            return 640;
         if ((active1 & 0x200000080000L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 10;
            return 640;
         }
         return -1;
      case 11:
         if ((active1 & 0x200000000000L) != 0L)
            return 640;
         if ((active1 & 0x80000L) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 11;
            return 640;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0, long active1, long active2){
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0, active1, active2), pos + 1);
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      case 9:
         return jjStopAtPos(0, 2);
      case 32:
         return jjStopAtPos(0, 1);
      case 40:
         return jjStopAtPos(0, 7);
      case 59:
         return jjStopAtPos(0, 145);
      case 61:
         return jjStopAtPos(0, 14);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa1_1(0x200L, 0x90000L, 0x0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa1_1(0x0L, 0x200000L, 0x0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa1_1(0x0L, 0x8400000L, 0x0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa1_1(0x0L, 0x40000000L, 0x0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa1_1(0x0L, 0x400000000L, 0x0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa1_1(0x0L, 0x6000000000L, 0x0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa1_1(0x0L, 0x40000000000L, 0x0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa1_1(0x0L, 0x200000000000L, 0x0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa1_1(0x400L, 0x3000000000000L, 0x0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa1_1(0x100L, 0x0L, 0x0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa1_1(0x800L, 0x4000000000000000L, 0x0L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa1_1(0x0L, 0x0L, 0x100L);
      default :
         return jjMoveNfa_1(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_1(long active0, long active1, long active2){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(0, active0, active1, active2);
      return 1;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_1(active0, 0x200L, active1, 0x4000000000000000L, active2, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_1(active0, 0L, active1, 0x400000L, active2, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa2_1(active0, 0x100L, active1, 0x3000000200000L, active2, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_1(active0, 0L, active1, 0x40000000L, active2, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_1(active0, 0L, active1, 0x400000000L, active2, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa2_1(active0, 0x400L, active1, 0x6000090000L, active2, 0L);
      case 81:
      case 113:
         return jjMoveStringLiteralDfa2_1(active0, 0L, active1, 0L, active2, 0x100L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_1(active0, 0x800L, active1, 0L, active2, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa2_1(active0, 0L, active1, 0x8000000L, active2, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa2_1(active0, 0L, active1, 0x240000000000L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_1(0, active0, active1, active2);
}
private int jjMoveStringLiteralDfa2_1(long old0, long active0, long old1, long active1, long old2, long active2){
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_1(0, old0, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(1, active0, active1, active2);
      return 2;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_1(active0, 0x800L, active1, 0x40000000L, active2, 0L);
      case 66:
      case 98:
         if ((active1 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_1(2, 126, 640);
         break;
      case 67:
      case 99:
         return jjMoveStringLiteralDfa3_1(active0, 0L, active1, 0x3000008000000L, active2, 0L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa3_1(active0, 0L, active1, 0x2000000000L, active2, 0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_1(active0, 0L, active1, 0x400000L, active2, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_1(active0, 0x700L, active1, 0x40000010000L, active2, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa3_1(active0, 0L, active1, 0x4000000000L, active2, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa3_1(active0, 0L, active1, 0x80000L, active2, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa3_1(active0, 0L, active1, 0x400200000L, active2, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa3_1(active0, 0L, active1, 0x200000000000L, active2, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_1(active0, 0L, active1, 0L, active2, 0x100L);
      default :
         break;
   }
   return jjStartNfa_1(1, active0, active1, active2);
}
private int jjMoveStringLiteralDfa3_1(long old0, long active0, long old1, long active1, long old2, long active2){
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_1(1, old0, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(2, active0, active1, active2);
      return 3;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa4_1(active0, 0L, active1, 0x8200000L, active2, 0L);
      case 69:
      case 101:
         if ((active0 & 0x400L) != 0L)
            return jjStartNfaWithStates_1(3, 10, 640);
         return jjMoveStringLiteralDfa4_1(active0, 0x100L, active1, 0L, active2, 0x100L);
      case 71:
      case 103:
         if ((active1 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_1(3, 102, 430);
         return jjMoveStringLiteralDfa4_1(active0, 0L, active1, 0x40000000L, active2, 0L);
      case 76:
      case 108:
         if ((active0 & 0x200L) != 0L)
            return jjStartNfaWithStates_1(3, 9, 640);
         else if ((active1 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_1(3, 106, 640);
         break;
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_1(active0, 0x800L, active1, 0L, active2, 0L);
      case 79:
      case 111:
         if ((active1 & 0x400000L) != 0L)
            return jjStartNfaWithStates_1(3, 86, 640);
         break;
      case 80:
      case 112:
         return jjMoveStringLiteralDfa4_1(active0, 0L, active1, 0x200000000000L, active2, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa4_1(active0, 0L, active1, 0x3002000010000L, active2, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_1(active0, 0L, active1, 0x400000000L, active2, 0L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa4_1(active0, 0L, active1, 0x80000L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_1(2, active0, active1, active2);
}
private int jjMoveStringLiteralDfa4_1(long old0, long active0, long old1, long active1, long old2, long active2){
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_1(2, old0, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(3, active0, active1, active2);
      return 4;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa5_1(active0, 0L, active1, 0x400000000L, active2, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa5_1(active0, 0x100L, active1, 0L, active2, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa5_1(active0, 0L, active1, 0x3000000010000L, active2, 0L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa5_1(active0, 0L, active1, 0x40000000L, active2, 0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa5_1(active0, 0L, active1, 0x8000000L, active2, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_1(active0, 0L, active1, 0x2000000000L, active2, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_1(active0, 0L, active1, 0x200000L, active2, 0x100L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa5_1(active0, 0x800L, active1, 0L, active2, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa5_1(active0, 0L, active1, 0x80000L, active2, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa5_1(active0, 0L, active1, 0x200000000000L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_1(3, active0, active1, active2);
}
private int jjMoveStringLiteralDfa5_1(long old0, long active0, long old1, long active1, long old2, long active2){
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_1(3, old0, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(4, active0, active1, active2);
      return 5;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa6_1(active0, 0x800L, active1, 0x8000000L, active2, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa6_1(active0, 0L, active1, 0x40000000L, active2, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa6_1(active0, 0L, active1, 0x200000L, active2, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa6_1(active0, 0L, active1, 0x400000000L, active2, 0L);
      case 80:
      case 112:
         if ((active1 & 0x10000L) != 0L)
            return jjStartNfaWithStates_1(5, 80, 640);
         else if ((active1 & 0x1000000000000L) != 0L)
         {
            jjmatchedKind = 112;
            jjmatchedPos = 5;
         }
         return jjMoveStringLiteralDfa6_1(active0, 0L, active1, 0x2000000000000L, active2, 0L);
      case 84:
      case 116:
         if ((active0 & 0x100L) != 0L)
            return jjStartNfaWithStates_1(5, 8, 640);
         return jjMoveStringLiteralDfa6_1(active0, 0L, active1, 0x200000000000L, active2, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa6_1(active0, 0L, active1, 0x2000000000L, active2, 0L);
      case 89:
      case 121:
         if ((active2 & 0x100L) != 0L)
            return jjStartNfaWithStates_1(5, 136, 640);
         return jjMoveStringLiteralDfa6_1(active0, 0L, active1, 0x80000L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_1(4, active0, active1, active2);
}
private int jjMoveStringLiteralDfa6_1(long old0, long active0, long old1, long active1, long old2, long active2){
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_1(4, old0, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(5, active0, active1, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 66:
      case 98:
         return jjMoveStringLiteralDfa7_1(active0, 0L, active1, 0x200000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa7_1(active0, 0x800L, active1, 0x2000400000000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_1(active0, 0L, active1, 0x200000000000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa7_1(active0, 0L, active1, 0x80000L);
      case 82:
      case 114:
         if ((active1 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_1(6, 91, 640);
         else if ((active1 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_1(6, 94, 640);
         return jjMoveStringLiteralDfa7_1(active0, 0L, active1, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_1(5, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa7_1(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_1(5, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(6, active0, active1, 0L);
      return 7;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa8_1(active0, 0L, active1, 0x2000000000L);
      case 69:
      case 101:
         if ((active1 & 0x200000L) != 0L)
            return jjStartNfaWithStates_1(7, 85, 640);
         else if ((active1 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_1(7, 98, 640);
         return jjMoveStringLiteralDfa8_1(active0, 0L, active1, 0x80000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa8_1(active0, 0L, active1, 0x2000000000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa8_1(active0, 0L, active1, 0x200000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa8_1(active0, 0x800L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_1(6, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa8_1(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_1(6, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(7, active0, active1, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa9_1(active0, 0L, active1, 0x2000000000000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_1(active0, 0L, active1, 0x80000L);
      case 69:
      case 101:
         if ((active1 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_1(8, 101, 640);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa9_1(active0, 0x800L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa9_1(active0, 0L, active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_1(7, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa9_1(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_1(7, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(8, active0, active1, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 72:
      case 104:
         return jjMoveStringLiteralDfa10_1(active0, 0L, active1, 0x80000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa10_1(active0, 0L, active1, 0x200000000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa10_1(active0, 0x800L, active1, 0L);
      case 82:
      case 114:
         if ((active1 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_1(9, 113, 640);
         break;
      default :
         break;
   }
   return jjStartNfa_1(8, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa10_1(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_1(8, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(9, active0, active1, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa11_1(active0, 0L, active1, 0x200000000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa11_1(active0, 0L, active1, 0x80000L);
      case 78:
      case 110:
         if ((active0 & 0x800L) != 0L)
            return jjStartNfaWithStates_1(10, 11, 640);
         break;
      default :
         break;
   }
   return jjStartNfa_1(9, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa11_1(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_1(9, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(10, 0L, active1, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa12_1(active1, 0x80000L);
      case 84:
      case 116:
         if ((active1 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_1(11, 109, 640);
         break;
      default :
         break;
   }
   return jjStartNfa_1(10, 0L, active1, 0L);
}
private int jjMoveStringLiteralDfa12_1(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_1(10, 0L, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(11, 0L, active1, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 75:
      case 107:
         if ((active1 & 0x80000L) != 0L)
            return jjStartNfaWithStates_1(12, 83, 640);
         break;
      default :
         break;
   }
   return jjStartNfa_1(11, 0L, active1, 0L);
}
private int jjStartNfaWithStates_1(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_1(state, pos + 1);
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 640;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 156:
               case 9:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 544:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 363:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 431:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 97:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 537:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 514:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 640:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 183:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 515:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 465:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 53:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 482:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 136:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 416:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 98:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 430:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 553:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 554:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 386:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 407:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 138)
                        kind = 138;
                     { jjCheckNAddStates(154, 160); }
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 13)
                        kind = 13;
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 27;
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 24;
                  else if (curChar == 34)
                     { jjCheckNAddTwoStates(16, 17); }
                  else if (curChar == 39)
                     { jjCheckNAddTwoStates(11, 12); }
                  else if (curChar == 46)
                     { jjCheckNAdd(4); }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 184:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 471:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 1:
                  if (curChar == 10 && kind > 13)
                     kind = 13;
                  break;
               case 2:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if (curChar == 46)
                     { jjCheckNAdd(4); }
                  break;
               case 4:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 6:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAdd(7); }
                  break;
               case 10:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 11:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 12:
                  if (curChar != 39)
                     break;
                  if (kind > 143)
                     kind = 143;
                  jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 13:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(14, 12); }
                  break;
               case 14:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(14, 12); }
                  break;
               case 15:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(16, 17); }
                  break;
               case 16:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     { jjCheckNAddTwoStates(16, 17); }
                  break;
               case 17:
                  if (curChar == 34 && kind > 144)
                     kind = 144;
                  break;
               case 19:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjAddStates(103, 104); }
                  break;
               case 22:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjAddStates(105, 106); }
                  break;
               case 24:
                  if (curChar != 45)
                     break;
                  if (kind > 146)
                     kind = 146;
                  { jjCheckNAdd(25); }
                  break;
               case 25:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 146)
                     kind = 146;
                  { jjCheckNAdd(25); }
                  break;
               case 26:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 27:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(28, 29); }
                  break;
               case 28:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(28, 29); }
                  break;
               case 29:
                  if (curChar == 42)
                     { jjCheckNAddStates(107, 109); }
                  break;
               case 30:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(31, 29); }
                  break;
               case 31:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(31, 29); }
                  break;
               case 32:
                  if (curChar == 47 && kind > 147)
                     kind = 147;
                  break;
               case 33:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 138)
                     kind = 138;
                  { jjCheckNAddStates(154, 160); }
                  break;
               case 119:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(119, 3); }
                  break;
               case 120:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(120, 121); }
                  break;
               case 121:
                  if (curChar != 46)
                     break;
                  if (kind > 137)
                     kind = 137;
                  jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 123:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(124); }
                  break;
               case 124:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAdd(124); }
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(125, 126); }
                  break;
               case 127:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(128); }
                  break;
               case 128:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 137)
                     kind = 137;
                  { jjCheckNAdd(128); }
                  break;
               case 129:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 138)
                     kind = 138;
                  { jjCheckNAdd(129); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 156:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 170;
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 158;
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 544:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 558;
                  else if ((0x400000004000L & l) != 0L)
                  {
                     if (kind > 81)
                        kind = 81;
                  }
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 554;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 543;
                  break;
               case 363:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 398;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 378;
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 396;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 376;
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 389;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 370;
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 386;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 431:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 434;
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 430;
                  break;
               case 97:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x4000000040L & l) != 0L)
                  {
                     if (kind > 84)
                        kind = 84;
                  }
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 537:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 559;
                  else if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 539;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 555;
                  else if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 536;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 546;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 544;
                  break;
               case 514:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 513;
                  break;
               case 640:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  break;
               case 183:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 189;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 515:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x800000008L & l) != 0L)
                  {
                     if (kind > 90)
                        kind = 90;
                  }
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 514;
                  break;
               case 465:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 473;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 467;
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 471;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 464;
                  break;
               case 53:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 57;
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 482:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 530;
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 517;
                  else if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 510;
                  else if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 494;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 485;
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 526;
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 515;
                  else if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 505;
                  else if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 492;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 481;
                  break;
               case 136:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 171;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 167;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 159;
                  else if ((0x20000000200L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                  }
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 416:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 435;
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 419;
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 431;
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 98:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 99;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 430:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x800000008L & l) != 0L)
                  {
                     if (kind > 103)
                        kind = 103;
                  }
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 553:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x800000008L & l) != 0L)
                  {
                     if (kind > 82)
                        kind = 82;
                  }
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 552;
                  break;
               case 554:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 557;
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 553;
                  break;
               case 386:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x200000002000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                  }
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 395;
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 388;
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 407:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 436;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 408;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 432;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 406;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 420;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  else if (curChar == 91)
                     { jjCheckNAddTwoStates(22, 23); }
                  else if (curChar == 96)
                     { jjCheckNAddTwoStates(19, 20); }
                  if ((0x200000002L & l) != 0L)
                     { jjAddStates(161, 172); }
                  else if ((0x800000008L & l) != 0L)
                     { jjAddStates(173, 178); }
                  else if ((0x2000000020L & l) != 0L)
                     { jjAddStates(179, 188); }
                  else if ((0x4000000040L & l) != 0L)
                     { jjAddStates(189, 192); }
                  else if ((0x10000000100L & l) != 0L)
                     { jjAddStates(193, 196); }
                  else if ((0x100000001000L & l) != 0L)
                     { jjAddStates(197, 202); }
                  else if ((0x400000004000L & l) != 0L)
                     { jjAddStates(203, 210); }
                  else if ((0x1000000010000L & l) != 0L)
                     { jjAddStates(211, 214); }
                  else if ((0x8000000080000L & l) != 0L)
                     { jjAddStates(215, 238); }
                  else if ((0x10000000100000L & l) != 0L)
                     { jjAddStates(239, 248); }
                  else if ((0x400000004L & l) != 0L)
                     { jjAddStates(249, 250); }
                  else if ((0x1000000010L & l) != 0L)
                     { jjAddStates(251, 252); }
                  else if ((0x200000002000L & l) != 0L)
                     { jjAddStates(253, 254); }
                  else if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(255, 256); }
                  else if ((0x40000000400000L & l) != 0L)
                     { jjAddStates(257, 258); }
                  else if ((0x80000000800000L & l) != 0L)
                     { jjAddStates(259, 260); }
                  else if ((0x100000001000000L & l) != 0L)
                     { jjAddStates(261, 262); }
                  break;
               case 184:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 339;
                  else if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 332;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 190;
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 337;
                  else if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 329;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 317;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 314;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 306;
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 301;
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 259;
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 251;
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 247;
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 234;
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 228;
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 471:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAdd(9); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  if ((0x20000000200000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                  }
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 5:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(112, 113); }
                  break;
               case 8:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAddTwoStates(8, 9); }
                  break;
               case 9:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  { jjCheckNAdd(9); }
                  break;
               case 11:
                  { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 14:
                  { jjCheckNAddTwoStates(14, 12); }
                  break;
               case 16:
                  { jjAddStates(114, 115); }
                  break;
               case 18:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(19, 20); }
                  break;
               case 19:
                  if ((0xfffffffeffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(19, 20); }
                  break;
               case 20:
                  if (curChar == 96 && kind > 144)
                     kind = 144;
                  break;
               case 21:
                  if (curChar == 91)
                     { jjCheckNAddTwoStates(22, 23); }
                  break;
               case 22:
                  if ((0xffffffffdfffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(22, 23); }
                  break;
               case 23:
                  if (curChar == 93 && kind > 144)
                     kind = 144;
                  break;
               case 25:
                  if (kind > 146)
                     kind = 146;
                  jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 28:
                  { jjCheckNAddTwoStates(28, 29); }
                  break;
               case 30:
               case 31:
                  { jjCheckNAddTwoStates(31, 29); }
                  break;
               case 34:
                  if ((0x100000001000000L & l) != 0L)
                     { jjAddStates(261, 262); }
                  break;
               case 35:
                  if ((0x80000000800L & l) != 0L && kind > 135)
                     kind = 135;
                  break;
               case 36:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 42:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if ((0x400000004000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 54:
                  if ((0x10000000100000L & l) != 0L && kind > 135)
                     kind = 135;
                  break;
               case 55:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if ((0x80000000800000L & l) != 0L)
                     { jjAddStates(259, 260); }
                  break;
               case 60:
                  if ((0x1000000010000L & l) != 0L && kind > 134)
                     kind = 134;
                  break;
               case 61:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if ((0x200000002L & l) != 0L && kind > 134)
                     kind = 134;
                  break;
               case 64:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if ((0x40000000400000L & l) != 0L)
                     { jjAddStates(257, 258); }
                  break;
               case 66:
                  if ((0x200000002000000L & l) != 0L && kind > 133)
                     kind = 133;
                  break;
               case 67:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if ((0x4000000040000L & l) != 0L && kind > 133)
                     kind = 133;
                  break;
               case 72:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(255, 256); }
                  break;
               case 74:
                  if ((0x2000000020L & l) != 0L && kind > 132)
                     kind = 132;
                  break;
               case 75:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 81:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 82:
                  if ((0x1000000010L & l) != 0L && kind > 132)
                     kind = 132;
                  break;
               case 83:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 84:
                  if ((0x200000002000L & l) != 0L)
                     { jjAddStates(253, 254); }
                  break;
               case 85:
                  if ((0x1000000010000L & l) != 0L && kind > 104)
                     kind = 104;
                  break;
               case 86:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 88:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 90:
                  if ((0x80000000800L & l) != 0L && kind > 104)
                     kind = 104;
                  break;
               case 91:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 92:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if ((0x1000000010L & l) != 0L)
                     { jjAddStates(251, 252); }
                  break;
               case 94:
                  if ((0x2000000020L & l) != 0L && kind > 84)
                     kind = 84;
                  break;
               case 95:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 99:
                  if ((0x4000000040L & l) != 0L && kind > 84)
                     kind = 84;
                  break;
               case 100:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 101:
                  if ((0x400000004L & l) != 0L)
                     { jjAddStates(249, 250); }
                  break;
               case 102:
                  if ((0x4000000040000L & l) != 0L && kind > 78)
                     kind = 78;
                  break;
               case 103:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 115:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if ((0x800000008000L & l) != 0L && kind > 78)
                     kind = 78;
                  break;
               case 117:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 122:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(263, 264); }
                  break;
               case 126:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(265, 266); }
                  break;
               case 130:
                  if ((0x10000000100000L & l) != 0L)
                     { jjAddStates(239, 248); }
                  break;
               case 131:
                  if ((0x10000000100000L & l) != 0L && kind > 127)
                     kind = 127;
                  break;
               case 132:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 137:
                  if ((0x200000002000L & l) != 0L && kind > 127)
                     kind = 127;
                  break;
               case 138:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if ((0x2000000020L & l) != 0L && kind > 128)
                     kind = 128;
                  break;
               case 141:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 143:
                  if ((0x20000000200L & l) != 0L && kind > 128)
                     kind = 128;
                  break;
               case 144:
                  if ((0x8000000080L & l) != 0L && kind > 129)
                     kind = 129;
                  break;
               case 145:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 149:
                  if ((0x20000000200L & l) != 0L && kind > 129)
                     kind = 129;
                  break;
               case 150:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if ((0x10000000100000L & l) != 0L && kind > 130)
                     kind = 130;
                  break;
               case 153:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 155:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 157:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if ((0x200000002000L & l) != 0L && kind > 130)
                     kind = 130;
                  break;
               case 159:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if ((0x100000001000L & l) != 0L && kind > 131)
                     kind = 131;
                  break;
               case 162:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if ((0x8000000080000L & l) != 0L && kind > 131)
                     kind = 131;
                  break;
               case 170:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if ((0x8000000080000L & l) != 0L)
                     { jjAddStates(215, 238); }
                  break;
               case 174:
                  if ((0x10000000100000L & l) != 0L && kind > 114)
                     kind = 114;
                  break;
               case 175:
               case 185:
                  if ((0x20000000200000L & l) != 0L)
                     { jjCheckNAdd(174); }
                  break;
               case 176:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 181:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 186:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if ((0x10000000100000L & l) != 0L && kind > 115)
                     kind = 115;
                  break;
               case 193:
                  if ((0x20000000200000L & l) != 0L)
                     { jjCheckNAdd(192); }
                  break;
               case 194:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 195:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 197:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 200:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if ((0x4000000040L & l) != 0L)
                     { jjCheckNAdd(192); }
                  break;
               case 202:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 203:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if ((0x2000000020L & l) != 0L && kind > 116)
                     kind = 116;
                  break;
               case 205:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 209:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 210:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if ((0x80000000800000L & l) != 0L && kind > 116)
                     kind = 116;
                  break;
               case 212:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 214:
                  if ((0x8000000080000L & l) != 0L && kind > 117)
                     kind = 117;
                  break;
               case 215:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 217:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 218:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 219:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 220:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 221:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 222:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 223:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 224:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 226:
                  if ((0x100000001000L & l) != 0L && kind > 117)
                     kind = 117;
                  break;
               case 227:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 228:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 229:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if ((0x2000000020L & l) != 0L && kind > 118)
                     kind = 118;
                  break;
               case 231:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 232:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 234:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 235:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 236:
                  if ((0x800000008L & l) != 0L && kind > 118)
                     kind = 118;
                  break;
               case 237:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 238:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 239:
                  if ((0x2000000020L & l) != 0L && kind > 119)
                     kind = 119;
                  break;
               case 240:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 241:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 242:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 243:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 247:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 248:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 249:
                  if ((0x800000008000L & l) != 0L && kind > 119)
                     kind = 119;
                  break;
               case 250:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 251:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 253:
                  if ((0x4000000040000L & l) != 0L && kind > 120)
                     kind = 120;
                  break;
               case 254:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 257:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 258:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 259:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 260:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 261:
                  if ((0x400000004000L & l) != 0L && kind > 120)
                     kind = 120;
                  break;
               case 262:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 263:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 264:
                  if ((0x200000002000000L & l) != 0L && kind > 121)
                     kind = 121;
                  break;
               case 265:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 266:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 268:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 269:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 270:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 271:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 272:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 273:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 274:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 275:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 276:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 277:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 278:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 279:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 280:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 281:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 282:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 283:
                  if ((0x10000000100000L & l) != 0L && kind > 121)
                     kind = 121;
                  break;
               case 284:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 285:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 286:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 287:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 288:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 289:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 290:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 291:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 292:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 293:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 292;
                  break;
               case 294:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 295:
                  if ((0x100000001000000L & l) != 0L && kind > 122)
                     kind = 122;
                  break;
               case 296:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 297:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 298:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 299:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 300:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 301:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 302:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 303:
                  if ((0x2000000020L & l) != 0L && kind > 122)
                     kind = 122;
                  break;
               case 304:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 305:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 306:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 307:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 308:
                  if ((0x10000000100000L & l) != 0L && kind > 123)
                     kind = 123;
                  break;
               case 309:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 310:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 311:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 312:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 313:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 314:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 315:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 316:
                  if ((0x1000000010000L & l) != 0L && kind > 123)
                     kind = 123;
                  break;
               case 317:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 318:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 319:
                  if ((0x4000000040000L & l) != 0L && kind > 124)
                     kind = 124;
                  break;
               case 320:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 321:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 322:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 323:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 324:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 325:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 326:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 327:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 328:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 327;
                  break;
               case 329:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 330:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 331:
                  if ((0x10000000100000L & l) != 0L && kind > 124)
                     kind = 124;
                  break;
               case 332:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 333:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 334:
                  if ((0x100000001000000L & l) != 0L && kind > 125)
                     kind = 125;
                  break;
               case 335:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 336:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 337:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 338:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 337;
                  break;
               case 339:
                  if ((0x4000000040L & l) != 0L && kind > 125)
                     kind = 125;
                  break;
               case 340:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 341:
                  if ((0x1000000010000L & l) != 0L)
                     { jjAddStates(211, 214); }
                  break;
               case 342:
                  if ((0x2000000020L & l) != 0L && kind > 110)
                     kind = 110;
                  break;
               case 343:
                  if ((0x400000004000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 344:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 345:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 346:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 347:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 348:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 349:
                  if ((0x8000000080000L & l) != 0L && kind > 110)
                     kind = 110;
                  break;
               case 350:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 351:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 352:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 353:
                  if ((0x2000000020L & l) != 0L && kind > 111)
                     kind = 111;
                  break;
               case 354:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 355:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 356:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 357:
                  if ((0x20000000200000L & l) != 0L && kind > 111)
                     kind = 111;
                  break;
               case 358:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 359:
                  if ((0x400000004000L & l) != 0L)
                     { jjAddStates(203, 210); }
                  break;
               case 360:
                  if ((0x40000000400000L & l) != 0L && kind > 12)
                     kind = 12;
                  break;
               case 361:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 362:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 364:
                  if ((0x2000000020L & l) != 0L && kind > 12)
                     kind = 12;
                  break;
               case 365:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 366:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 367:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 368:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 369:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 370:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 369;
                  break;
               case 371:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 370;
                  break;
               case 372:
                  if ((0x2000000020L & l) != 0L && kind > 105)
                     kind = 105;
                  break;
               case 373:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 374:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 373;
                  break;
               case 375:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 376:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 377:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 378:
                  if ((0x80000000800000L & l) != 0L && kind > 105)
                     kind = 105;
                  break;
               case 379:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 380:
                  if ((0x10000000100000L & l) != 0L && kind > 107)
                     kind = 107;
                  break;
               case 381:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 380;
                  break;
               case 382:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 381;
                  break;
               case 383:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 384:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 385:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 384;
                  break;
               case 387:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 386;
                  break;
               case 388:
                  if ((0x4000000040L & l) != 0L && kind > 107)
                     kind = 107;
                  break;
               case 389:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 390:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 389;
                  break;
               case 391:
                  if ((0x10000000100L & l) != 0L && kind > 108)
                     kind = 108;
                  break;
               case 392:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 393:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 394:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 395:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 396:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 397:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 396;
                  break;
               case 398:
                  if ((0x200000002000L & l) != 0L && kind > 108)
                     kind = 108;
                  break;
               case 399:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 398;
                  break;
               case 400:
                  if ((0x100000001000L & l) != 0L)
                     { jjAddStates(197, 202); }
                  break;
               case 401:
                  if ((0x2000000020L & l) != 0L && kind > 99)
                     kind = 99;
                  break;
               case 402:
                  if ((0x400000004000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 403:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 404:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 405:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 406:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 405;
                  break;
               case 408:
                  if ((0x400000004000L & l) != 0L && kind > 99)
                     kind = 99;
                  break;
               case 409:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 410:
                  if ((0x10000000100000L & l) != 0L && kind > 100)
                     kind = 100;
                  break;
               case 411:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 412:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 411;
                  break;
               case 413:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 414:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 415:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 414;
                  break;
               case 417:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 418:
                  if ((0x4000000040L & l) != 0L && kind > 100)
                     kind = 100;
                  break;
               case 419:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 418;
                  break;
               case 420:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 421:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 422:
                  if ((0x2000000020L & l) != 0L && kind > 103)
                     kind = 103;
                  break;
               case 423:
                  if ((0x400000004000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 422;
                  break;
               case 424:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 425:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 424;
                  break;
               case 426:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 425;
                  break;
               case 427:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 428:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 427;
                  break;
               case 429:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 428;
                  break;
               case 432:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 431;
                  break;
               case 433:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 434:
                  if ((0x800000008L & l) != 0L && kind > 103)
                     kind = 103;
                  break;
               case 435:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 434;
                  break;
               case 436:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 435;
                  break;
               case 437:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 436;
                  break;
               case 438:
                  if ((0x10000000100L & l) != 0L)
                     { jjAddStates(193, 196); }
                  break;
               case 439:
                  if ((0x8000000080L & l) != 0L && kind > 96)
                     kind = 96;
                  break;
               case 440:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 439;
                  break;
               case 441:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 442:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 441;
                  break;
               case 443:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 442;
                  break;
               case 444:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 443;
                  break;
               case 445:
                  if ((0x200000002L & l) != 0L && kind > 96)
                     kind = 96;
                  break;
               case 446:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 445;
                  break;
               case 447:
                  if ((0x1000000010000L & l) != 0L && kind > 97)
                     kind = 97;
                  break;
               case 448:
               case 453:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(447); }
                  break;
               case 449:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 448;
                  break;
               case 450:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 451:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 450;
                  break;
               case 452:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 451;
                  break;
               case 454:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 453;
                  break;
               case 455:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 454;
                  break;
               case 456:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 457:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 456;
                  break;
               case 458:
                  if ((0x4000000040L & l) != 0L)
                     { jjAddStates(189, 192); }
                  break;
               case 459:
                  if ((0x80000000800L & l) != 0L && kind > 93)
                     kind = 93;
                  break;
               case 460:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 459;
                  break;
               case 461:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 460;
                  break;
               case 462:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 461;
                  break;
               case 463:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 464:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 463;
                  break;
               case 466:
                  if ((0x1000000010L & l) != 0L && kind > 93)
                     kind = 93;
                  break;
               case 467:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 466;
                  break;
               case 468:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 467;
                  break;
               case 469:
                  if ((0x10000000100L & l) != 0L && kind > 95)
                     kind = 95;
                  break;
               case 470:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 472:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 471;
                  break;
               case 473:
                  if ((0x20000000200000L & l) != 0L && kind > 95)
                     kind = 95;
                  break;
               case 474:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 473;
                  break;
               case 475:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(179, 188); }
                  break;
               case 476:
                  if ((0x2000000020L & l) != 0L && kind > 87)
                     kind = 87;
                  break;
               case 477:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 476;
                  break;
               case 478:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 477;
                  break;
               case 479:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 478;
                  break;
               case 480:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 479;
                  break;
               case 481:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 480;
                  break;
               case 483:
                  if ((0x4000000040L & l) != 0L && kind > 87)
                     kind = 87;
                  break;
               case 484:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 483;
                  break;
               case 485:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 484;
                  break;
               case 486:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 485;
                  break;
               case 487:
                  if ((0x1000000010L & l) != 0L && kind > 88)
                     kind = 88;
                  break;
               case 488:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 487;
                  break;
               case 489:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 488;
                  break;
               case 490:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 489;
                  break;
               case 491:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 490;
                  break;
               case 492:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 491;
                  break;
               case 493:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 492;
                  break;
               case 494:
                  if ((0x400000004L & l) != 0L && kind > 88)
                     kind = 88;
                  break;
               case 495:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 494;
                  break;
               case 496:
                  if ((0x8000000080L & l) != 0L && kind > 89)
                     kind = 89;
                  break;
               case 497:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 496;
                  break;
               case 498:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 497;
                  break;
               case 499:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 498;
                  break;
               case 500:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 499;
                  break;
               case 501:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 500;
                  break;
               case 502:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 501;
                  break;
               case 503:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 502;
                  break;
               case 504:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 503;
                  break;
               case 505:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 504;
                  break;
               case 506:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 505;
                  break;
               case 507:
                  if ((0x100000001000L & l) != 0L && kind > 89)
                     kind = 89;
                  break;
               case 508:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 507;
                  break;
               case 509:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 508;
                  break;
               case 510:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 509;
                  break;
               case 511:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 510;
                  break;
               case 512:
                  if ((0x2000000020L & l) != 0L && kind > 90)
                     kind = 90;
                  break;
               case 513:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 512;
                  break;
               case 516:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 515;
                  break;
               case 517:
                  if ((0x800000008L & l) != 0L && kind > 90)
                     kind = 90;
                  break;
               case 518:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 517;
                  break;
               case 519:
                  if ((0x10000000100000L & l) != 0L && kind > 92)
                     kind = 92;
                  break;
               case 520:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 519;
                  break;
               case 521:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 520;
                  break;
               case 522:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 521;
                  break;
               case 523:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 522;
                  break;
               case 524:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 523;
                  break;
               case 525:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 524;
                  break;
               case 526:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 525;
                  break;
               case 527:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 526;
                  break;
               case 528:
                  if ((0x800000008L & l) != 0L && kind > 92)
                     kind = 92;
                  break;
               case 529:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 528;
                  break;
               case 530:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 529;
                  break;
               case 531:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 530;
                  break;
               case 532:
                  if ((0x800000008L & l) != 0L)
                     { jjAddStates(173, 178); }
                  break;
               case 533:
                  if ((0x1000000010000L & l) != 0L && kind > 79)
                     kind = 79;
                  break;
               case 534:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 533;
                  break;
               case 535:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 534;
                  break;
               case 536:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 535;
                  break;
               case 538:
                  if ((0x8000000080000L & l) != 0L && kind > 79)
                     kind = 79;
                  break;
               case 539:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 538;
                  break;
               case 540:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 539;
                  break;
               case 541:
                  if ((0x10000000100000L & l) != 0L && kind > 81)
                     kind = 81;
                  break;
               case 542:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 541;
                  break;
               case 543:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 542;
                  break;
               case 545:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 544;
                  break;
               case 546:
                  if ((0x400000004000L & l) != 0L && kind > 81)
                     kind = 81;
                  break;
               case 547:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 546;
                  break;
               case 548:
                  if ((0x10000000100000L & l) != 0L && kind > 82)
                     kind = 82;
                  break;
               case 549:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 548;
                  break;
               case 550:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 549;
                  break;
               case 551:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 550;
                  break;
               case 552:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 551;
                  break;
               case 555:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 554;
                  break;
               case 556:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 555;
                  break;
               case 557:
                  if ((0x800000008L & l) != 0L && kind > 82)
                     kind = 82;
                  break;
               case 558:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 557;
                  break;
               case 559:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 558;
                  break;
               case 560:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 559;
                  break;
               case 561:
                  if ((0x200000002L & l) != 0L)
                     { jjAddStates(161, 172); }
                  break;
               case 562:
                  if ((0x800000008000L & l) != 0L && kind > 72)
                     kind = 72;
                  break;
               case 563:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 562;
                  break;
               case 564:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 563;
                  break;
               case 565:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 564;
                  break;
               case 566:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 567:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 566;
                  break;
               case 568:
                  if ((0x20000000200L & l) != 0L && kind > 72)
                     kind = 72;
                  break;
               case 569:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 570:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 569;
                  break;
               case 571:
                  if ((0x2000000020L & l) != 0L && kind > 73)
                     kind = 73;
                  break;
               case 572:
                  if ((0x400000004000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 571;
                  break;
               case 573:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 572;
                  break;
               case 574:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 573;
                  break;
               case 575:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 576:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 575;
                  break;
               case 577:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 576;
                  break;
               case 578:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 577;
                  break;
               case 579:
                  if ((0x200000002000000L & l) != 0L && kind > 73)
                     kind = 73;
                  break;
               case 580:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 579;
                  break;
               case 581:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 580;
                  break;
               case 582:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 581;
                  break;
               case 583:
                  if ((0x10000000100000L & l) != 0L && kind > 74)
                     kind = 74;
                  break;
               case 584:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 583;
                  break;
               case 585:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 586:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 587:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 586;
                  break;
               case 588:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 587;
                  break;
               case 589:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 590:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 589;
                  break;
               case 591:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 590;
                  break;
               case 592:
                  if ((0x800000008000L & l) != 0L && kind > 74)
                     kind = 74;
                  break;
               case 593:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 592;
                  break;
               case 594:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 595:
                  if ((0x10000000100000L & l) != 0L && kind > 75)
                     kind = 75;
                  break;
               case 596:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 595;
                  break;
               case 597:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 596;
                  break;
               case 598:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 597;
                  break;
               case 599:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 600:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 599;
                  break;
               case 601:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 600;
                  break;
               case 602:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 601;
                  break;
               case 603:
                  if ((0x1000000010000L & l) != 0L && kind > 75)
                     kind = 75;
                  break;
               case 604:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 603;
                  break;
               case 605:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 604;
                  break;
               case 606:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 605;
                  break;
               case 607:
                  if ((0x200000002000000L & l) != 0L && kind > 76)
                     kind = 76;
                  break;
               case 608:
               case 618:
                  if ((0x4000000040000L & l) != 0L)
                     { jjCheckNAdd(607); }
                  break;
               case 609:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 608;
                  break;
               case 610:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 609;
                  break;
               case 611:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 610;
                  break;
               case 612:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 611;
                  break;
               case 613:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 612;
                  break;
               case 614:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 613;
                  break;
               case 615:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 614;
                  break;
               case 616:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 615;
                  break;
               case 617:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 616;
                  break;
               case 619:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 618;
                  break;
               case 620:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 619;
                  break;
               case 621:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 620;
                  break;
               case 622:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 621;
                  break;
               case 623:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 622;
                  break;
               case 624:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 623;
                  break;
               case 625:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 624;
                  break;
               case 626:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 625;
                  break;
               case 627:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 626;
                  break;
               case 628:
                  if ((0x2000000020L & l) != 0L && kind > 77)
                     kind = 77;
                  break;
               case 629:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 628;
                  break;
               case 630:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 629;
                  break;
               case 631:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 630;
                  break;
               case 632:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 631;
                  break;
               case 633:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 632;
                  break;
               case 634:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 633;
                  break;
               case 635:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 634;
                  break;
               case 636:
                  if ((0x10000000100000L & l) != 0L && kind > 77)
                     kind = 77;
                  break;
               case 637:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 636;
                  break;
               case 638:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 637;
                  break;
               case 639:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 638;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 11:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 14:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(14, 12); }
                  break;
               case 16:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(114, 115); }
                  break;
               case 19:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(103, 104); }
                  break;
               case 22:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(105, 106); }
                  break;
               case 25:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 146)
                     kind = 146;
                  jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 28:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(28, 29); }
                  break;
               case 30:
               case 31:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(31, 29); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 640 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   231, 18, 232, 233, 237, 238, 241, 34, 35, 37, 38, 44, 45, 47, 363, 365, 
   370, 372, 331, 333, 335, 336, 343, 346, 355, 358, 301, 305, 309, 311, 315, 318, 
   323, 325, 263, 265, 268, 270, 274, 276, 280, 282, 288, 293, 247, 250, 255, 259, 
   193, 198, 203, 205, 213, 216, 224, 227, 229, 174, 175, 181, 184, 186, 140, 144, 
   145, 150, 152, 158, 161, 167, 170, 105, 107, 112, 118, 123, 131, 134, 98, 99, 
   90, 94, 80, 82, 66, 72, 54, 58, 21, 22, 31, 32, 235, 236, 239, 240, 
   49, 3, 50, 51, 55, 56, 59, 19, 20, 22, 23, 29, 30, 32, 39, 47, 
   6, 7, 16, 17, 53, 54, 57, 58, 48, 3, 49, 50, 54, 55, 58, 38, 
   46, 52, 53, 56, 57, 31, 32, 34, 37, 0, 38, 39, 43, 44, 47, 26, 
   27, 29, 3, 4, 13, 14, 41, 42, 45, 46, 119, 3, 120, 121, 125, 126, 
   129, 567, 570, 578, 582, 591, 594, 602, 606, 617, 627, 635, 639, 537, 540, 545, 
   547, 556, 560, 482, 486, 493, 495, 506, 511, 516, 518, 527, 531, 465, 468, 472, 
   474, 444, 446, 452, 457, 407, 409, 417, 421, 433, 437, 363, 371, 377, 379, 387, 
   390, 397, 399, 348, 352, 356, 358, 184, 191, 200, 203, 210, 213, 225, 229, 235, 
   238, 248, 252, 260, 263, 282, 294, 302, 307, 315, 318, 330, 333, 338, 340, 136, 
   139, 142, 143, 148, 151, 157, 160, 168, 172, 115, 117, 98, 100, 89, 92, 81, 
   83, 70, 72, 62, 64, 53, 58, 123, 124, 127, 128, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, "\50", null, null, null, null, null, 
null, "\75", "\100", "\100\100", "\57", null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, "\73", null, null, null, null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 4;
int defaultLexState = 4;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }

   switch(curLexState)
   {
     case 0:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       break;
     case 1:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       break;
     case 2:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_2();
       break;
     case 3:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_3();
       break;
     case 4:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_4();
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
           }
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrException(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrException.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public SqlParserTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new RuntimeException("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public SqlParserTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream)
  {
	
    jjmatchedPos = jjnewStateCnt = 0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 640; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit( SimpleCharStream stream, int lexState)
  {
  
    ReInit( stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 5 || lexState < 0)
      throw new TokenMgrException("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrException.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }

/** Lexer state names. */
public static final String[] lexStateNames = {
   "IN_NO_SPACE_VALUE",
   "IN_SET",
   "IN_CLIENT_CMD",
   "IN_SQL",
   "DEFAULT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, 3, 3, 3, 3, -1, 4, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
   2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
   2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, 2, 
};
static final long[] jjtoToken = {
   0xffffffffffffff81L, 0xffffffffffffffffL, 0x3397ffL, 
};
static final long[] jjtoSkip = {
   0x7eL, 0x0L, 0xc0000L, 
};
static final long[] jjtoSpecial = {
   0x7eL, 0x0L, 0xc0000L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[640];
    private final int[] jjstateSet = new int[2 * 640];

    
    protected int curChar;
}
